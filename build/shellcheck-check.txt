
In check line 21:
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
     ^-- SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.


In check line 59:
    for cmd in `find ./ -type f -name "*.sh" | sort`
               ^-- SC2006: Use $(..) instead of legacy `..`.


In check line 61:
        name=$( basename $cmd)
                         ^-- SC2086: Double quote to prevent globbing and word splitting.


In check line 62:
        desc=$( grep '^#Desc:' $cmd | sed 's/#Desc://' )
                               ^-- SC2086: Double quote to prevent globbing and word splitting.


In check line 76:
for cmd in ` find ./ -type f -name "*.sh"`
           ^-- SC2044: For loops over find output are fragile. Use find -exec or a while read loop.
           ^-- SC2006: Use $(..) instead of legacy `..`.


In check line 80:
    testExec=$( expr $testExec + 1 )
                ^-- SC2003: expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].


In check line 84:
    ntests=$( expr $ntests + 1 )
              ^-- SC2003: expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].


In check line 87:
        ntestsOk=$( expr $ntestsOk + 1 )
                    ^-- SC2003: expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].

