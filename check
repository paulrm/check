#Desc: Ejecuta los comandos de check en $HOME/dev/check.d
#
#

if [ -d ./check.d ]
then
    cd ./check.d
else
    if [ -d ~/check.d ]
    then
       cd ~/check.d
    fi
fi
#
# NOTE: This requires GNU getopt.  On Mac OS X and FreeBSD, you have to install this
# separately; see below.
TEMP=`getopt -o ledm: \
             --long list,exec,debug,memory:,debugfile:,minheap:,maxheap: \
             -n 'javawrap' -- "$@"`

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

EMPTY=true
LIST=false
DEBUG=false
MEMORY=
DEBUGFILE=
JAVA_MISC_OPT=

##
# Loop Opt
##
while true; do
  case "$1" in
    -e | --exec ) EMPTY=false; shift ;;
    -l | --list ) EMPTY=false; LIST=true; shift ;;
    -d | --debug ) DEBUG=true; shift ;;
    -- ) shift; break ;;
    * ) 
      break ;;
  esac
done

if [ "$EMPTY" = "true" ]
then
    echo "Usar: check [--list | --exec]"
    exit 1
fi
##
# Verifico condiciones
##
#for a in LIST
#do
#    echo $a ${!a}
#done

if [ "$LIST" = "true" ]
then
    for cmd in `find ./ -type f -name "*.sh" | sort`
    do
        name=$( basename $cmd)
        desc=$( grep '^#Desc:' $cmd | sed 's/#Desc://' )
        printf "%-30s | %-85s\n" "$name" "$desc"
    done
    exit 1
fi


# --exec
testExec=0
testOk=0
d=$( date )
ntests=0
ntestsOk=0
echo "--> Comenzando tests $d"
for cmd in ` find ./ -type f -name "*.sh"`
do
    #echo $cmd
    # sh ~/dev/etc/check.d/01-paquete-ack-installed.sh
    testExec=$( expr $testExec + 1 )
    test=$( $cmd -s )
    out=$( $cmd -e )
    printf "> %-60s %-20s\n" "$test" "$out"
    ntests=$( expr $ntests + 1 )
    if [ "$out" = "Ok" ]
    then
        ntestsOk=$( expr $ntestsOk + 1 )
    fi
done
d=$( date )
echo "--> Fin check tests ($ntestsOk/$ntests) $d / $SECONDS segs"
if [ $ntestsOk -ne $ntests ] 
then
    exit 1
else
    exit 0
fi
